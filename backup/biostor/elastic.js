{"_id":"_design/elastic","_rev":"2-3098b6a52d0fb9dac0a492fcf2f00557","language":"javascript","lists":{"values":"function(head,req) { var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { send(JSON.stringify(row.value) + '\\n'); } }"},"views":{"biostor":{"map":"\n//----------------------------------------------------------------------------------------\nfunction add_values(elastic_search_doc, key, value, boost) {\n\telastic_search_doc.search_data.fulltext_values.push(value);\n\t\n\tboosted = (typeof boost !== 'undefined') ?  boost : false;\n\t\n\tif (boosted) {\n\t\telastic_search_doc.search_data.fulltext_boosted_values.push(value);\n\t}\n\t\n\tswitch (key) {\n\t\tcase 'classification':\n\t\tcase 'container':\n\t\tcase 'author':\n\t\t\telastic_search_doc.search_data[key].push(value);\n\t\t\tbreak;\n\t\t\t\n\t\tcase 'geometry':\t\n\t\tcase 'type':\n\t\tcase 'year':\n\t\t\telastic_search_doc.search_data[key] = value;\n\t\t\tbreak;\n\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\t\n\treturn elastic_search_doc;\n}\n\n//----------------------------------------------------------------------------------------\nfunction message(doc) {\n  if (doc._id.match(/biostor/)) {\n\n\n    var elastic_search_doc = {};\n    \n    elastic_search_doc.id = doc._id;\n    elastic_search_doc.id =  elastic_search_doc.id.replace(/\\//, '-');\n    \n    // type of document\n    elastic_search_doc.type = doc.type;\n    \n\t// output to display in list of hits\n\telastic_search_doc.search_result_data = {};\n\t\n\t// possible fields to hold information on how to display this object\n\telastic_search_doc.search_result_data.name = '';\n\telastic_search_doc.search_result_data.description = '';\n\telastic_search_doc.search_result_data.creator = [];\n\telastic_search_doc.search_result_data.thumbnailUrl = '';\n\telastic_search_doc.search_result_data.url = '';\n\t\n\t\n\t// BioStor\n\telastic_search_doc.search_result_data.url = 'https://biostor.org/reference/' + doc._id.replace(/biostor\\//, '');\n\telastic_search_doc.search_result_data.thumbnailUrl = 'https://biostor.org/reference/' + doc._id.replace(/biostor\\//, '') + '/thumbnail';\n\t\n\t// temporary\n\telastic_search_doc.search_result_data.description_parts = [];\n\t\n\t/*\n\tif ($url)\n\t{\n\t\t$doc->search_result_data->url = $url;\n\t}\n\t*/\n\n\t// fields that will be searched on\n\telastic_search_doc.search_data = {};\n\t\n\t// text fields for searching on\n\telastic_search_doc.search_data.fulltext_values = [];\n\telastic_search_doc.search_data.fulltext_boosted_values = [];\n\t\n\t// things to use as facets\n\telastic_search_doc.search_data.container = [];\n\telastic_search_doc.search_data.author = [];\n\telastic_search_doc.search_data.year = null;\n\telastic_search_doc.search_data.classification = [];\n\t\n\t\n\t// regular\n\t\n\t// type\n\telastic_search_doc.search_data.type = doc.type, false;\n\t\n\t// title\n\n\tif (doc.title) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'title', doc.title, true);\n\t\telastic_search_doc.search_result_data.name = doc.title;\n\t}\n\t\n\t// container\n    if (doc.journal) {\n\t\tif (doc.journal.name) {\n\t\t\tvar container = doc.journal.name;\n\t\t\telastic_search_doc = add_values(elastic_search_doc, 'container', container, true);\n\t\t\telastic_search_doc.search_result_data.description_parts.push('in ' + container);\t\n\t\t}\n\t}\t\t\n\t\n\t// author\n\tif (doc.author) {\n\t\tfor (var i in doc.author) {\n    \t\t// simple case\n    \t\tvar name = [];\n    \t\t\n    \t\tif (doc.author[i].firstname) {\n    \t\t\tname.push(doc.author[i].firstname);\n    \t\t}\n     \t\tif (doc.author[i].lastname) {\n    \t\t\tname.push(doc.author[i].lastname);\n    \t\t}\n \t\t\t// just use literal if we have it\n     \t\tif (doc.author[i].name) {\n    \t\t\tname = [doc.author[i].name];\n    \t\t}\n    \t\t\n    \t\tif (name.length > 0) {\n    \t\t\tadd_values(elastic_search_doc, 'author', name.join(' '), true); \n    \t\t\telastic_search_doc.search_result_data.creator.push(name.join(' '));\n    \t\t}\n\t\t}\n\t}\n\t\t\n\t//------------------------------------------------------------------------------------\n\n\t// date\n\tif (doc.year) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'year', parseInt(doc.year));\t\t\t\n\t\telastic_search_doc.search_result_data.description_parts.push('in ' + doc.year);\t\t\n\t} \n\n\t// volume\n\tif (doc.journal.volume) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'volume', doc.journal.volume);\t\t\n\t\telastic_search_doc.search_result_data.description_parts.push('in volume ' + doc.journal.volume);\t\t\n\t} \n\n\t// issue\n\tif (doc.journal.issue) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'issue', doc.journal.issue);\t\t\n\t\telastic_search_doc.search_result_data.description_parts.push('issue ' + doc.journal.issue);\t\t\n\t} \n\n\t// page\n\tif (doc.journal.pages) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'page', doc.journal.pages);\n\t\tvar prefix = 'page';\n\t\tif (doc.journal.pages.match(/-/)) {\n\t\t\tprefix = 'pages';\n\t\t}\n\t\telastic_search_doc.search_result_data.description_parts.push(prefix + ' ' + doc.journal.pages.replace(/--/, '-'));\t\t\n\t} \n\n\t// DOI\n/*\tif (doc.DOI) {\n\t\telastic_search_doc = add_values(elastic_search_doc, 'doi', doc.message.DOI);\t\t\n\t\t\n\t\telastic_search_doc.search_result_data.doi = doc.message.DOI;\n\t} \n\t*/\n\n\t//------------------------------------------------------------------------------------\n\t// classification\n    if (doc.classification) {\n    \tfor (var i in doc.classification) {\n\t\t\telastic_search_doc = add_values(elastic_search_doc, 'classification', doc.classification[i], false);\n\t\t}\n\t}\n\t\n\t//------------------------------------------------------------------------------------\n\t\n\t\n\t// geo\n    if (doc.geometry) {\n    \telastic_search_doc.search_data.geometry = doc.geometry, false;\n\t}\n\t\n\t//------------------------------------------------------------------------------------\n\t// cleanup\n\telastic_search_doc.search_data.fulltext = elastic_search_doc.search_data.fulltext_values.join(' ');\n\tdelete elastic_search_doc.search_data.fulltext_values;\n\n\telastic_search_doc.search_data.fulltext_boosted = elastic_search_doc.search_data.fulltext_boosted_values.join(' ');\n\tdelete elastic_search_doc.search_data.fulltext_boosted_values;\n\t\n\telastic_search_doc.search_result_data.description = 'Published ' + elastic_search_doc.search_result_data.description_parts.join(', ');\n\tdelete elastic_search_doc.search_result_data.description_parts;\n\t\n\tif (!elastic_search_doc.search_result_data.creator) {\n\t\tdelete elastic_search_doc.search_result_data.creator;\n\t}\n\t\n\tif (!elastic_search_doc.search_result_data.thumbnailUrl) {\n\t\tdelete elastic_search_doc.search_result_data.thumbnailUrl;\n\t}\n\n\tif (!elastic_search_doc.search_result_data.url) {\n\t\tdelete elastic_search_doc.search_result_data.url;\n\t}\n\t\n\t//$('#jsonld').html(JSON.stringify(elastic_search_doc, null, 2));\n\n        emit(doc._id, elastic_search_doc);\n    \n\n  }\n}\n\nfunction(doc) {\n  if (doc._id.match(/biostor/)) {\n    message(doc);\n  }\n}"}}}
